#!/usr/bin/perl
# 2010 (c) Przemys≈Çaw Iskra <sparky@pld-linux.org>
#
# extract files from .rar, .zip and .001 files

use strict;
use warnings;
use Carp;

sub green
{
	print "\033[1;32m", @_, "\033[0;37m\n";
}

sub cmd2lines
{
	my @cmd = @_;
	my @lines;

	green( "@cmd" );

	open IN, "-|", @cmd
		or croak "Cannot run command @cmd";
	while ( <IN> ) {
		push @lines, $_;
		print $_;
	}
	close IN
		or croak "Command @cmd failed";

	return @lines;
}

sub unrar
{
	my $file = shift;

	my @exfiles = map { /^Extracting from (.*?)\s*$/ }
		cmd2lines( "unrar", "-idp", "x", $file );

	print "File $file extracted.\n";
	unlink @exfiles;
}

sub unzip
{
	my $file = shift;

	my @files = cmd2lines( "unzip", "-l", $file );
	do {
		$_ = shift @files;
	} until ( not $_ or /^-+/s );

	$files[0] =~ m{^.*?:\d+\s+(.*?)/};
	my $dir = $1;
	if ( defined $dir ) {
		while ( $_ = shift @files ) {
			last unless /^.*?:\d+\s+(.*)$/;
			$_ = $1;
			m#(.*?)/#;
			if ( not defined $1 or $dir ne $1 ) {
				$dir = undef;
				last;
			}
		}
	}

	my @opts;
	unless ( $dir ) {
		$_ = $file;
	       	s{^.*/}{};
		s{\.zip$}{}i;
		mkdir $_;
		push @opts, ("-d", $_);
	}

	my @exfiles = map { /^Archive:\s+(.*?)\s*$/ }
		cmd2lines( "unzip", @opts, $file );

	print "File $file extracted.\n";
	unlink @exfiles;
}

sub fsize
{
	return (stat shift)[7];
}

sub unsplit
{
	my $file = shift;
	my $fs = fsize $file;

	( my $base = $file ) =~ s/\.001//;
	my @files = sort glob "$base.[0-9][0-9][0-9]";

	# starts at .000 ?
	croak "Invalid file $files[0]"
		unless $files[0] eq $file;

	my $last_file = pop @files;

	# at least 2 files
	croak "Not enough files"
		unless scalar @files >= 1;

	# number of files must be the same as number in last file
	$last_file =~ /\.([0-9]{3})$/;
	croak "Some file is missing"
		unless $1 == 1 + scalar @files;

	# last file must be smaller
	croak "Cannot find last file"
		if $fs <= fsize $last_file;

	foreach my $f ( @files ) {
		# all other files must have same size
		croak "File $f has wrong size"
			unless $fs == fsize $f;
	}

	push @files, $last_file;

	$base =~ s#.*/##;
	green( "cat @files > $base" );

	open F_OUT, ">", $base
		or return;

	my $len = 16 * 1024 * 1024;
	my $buf = " " x $len;
	$buf = "";
	foreach my $f ( @files ) {
		open F_IN, "<", $f
			or return;
		while ( read F_IN, $buf, $len ) {
			print F_OUT $buf
				or return;
		}
		close F_IN;
	}

	close F_OUT
		or return;

	unlink @files;
}

sub spill
{
	my $file = shift;
	if ( $file =~ /\.rar$/i ) {
		unrar( $file );
	} elsif ( $file =~ /\.zip$/i ) {
		unzip( $file );
	} elsif ( $file =~ /\.001$/ ) {
		unsplit( $file );
	} else {
		print "Skipping $file\n";
	}
}

my @files = sort @ARGV;
while ( my $file = shift @files ) {
	next unless -r $file;
	eval {
		spill( $file );
	};
}
